#include <bits/stdc++.h>
using namespace std;

int dx[19][4] = {
	{ 0, 0, 0, 0 },
	{ 0, 1, 2, 3 },
	{ 0, 0, 1, 1 },
	{ 0, 1, 2, 2 },
	{ 0, 1, 2, 2 },
	{ 0, 0, 1, 2 },
	{ 0, 0, 1, 2 },
	{ 0, 0, 0, 1 },
	{ 0, 1, 1, 1 },
	{ 0, 0, 0, 1 },
	{ 0, 1, 1, 1 },
	{ 0, 1, 1, 2 },
	{ 0, 0, 1, 1 },
	{ 0, 1, 1, 2 },
	{ 0, 0, 1, 1 },
	{ 0, 0, 0, 1 },
	{ 0, 1, 1, 2 },
	{ 0, 1, 1, 1 },
	{ 0, 1, 1, 2 }
};
int dy[19][4] = {
	{ 0, 1, 2, 3 },
	{ 0, 0, 0, 0 },
	{ 0, 1, 0, 1 },
	{ 0, 0, 0, 1 },
	{ 1, 1, 0, 1 },
	{ 0, 1, 0, 0 },
	{ 0, 1, 1, 1 },
	{ 0, 1, 2, 0 },
	{ 0, 0, 1, 2 },
	{ 0, 1, 2, 2 },
	{ 2, 0, 1, 2 },
	{ 0, 0, 1, 1 },
	{ 1, 2, 0, 1 },
	{ 1, 0, 1, 0 },
	{ 0, 1, 1, 2 },
	{ 0, 1, 2, 1 },
	{ 1, 0, 1, 1 },
	{ 1, 0, 1, 2 },
	{ 0, 0, 1, 0 }
};

int N, M;
int board[500][500];

int main() {
	ios::sync_with_stdio(0);
	cin.tie(0);

	cin >> N >> M;
	for (int x = 0; x < N; x++) {
		for (int y = 0; y < M; y++) {
			cin >> board[x][y];
		}
	}

	int ans = 0;
	for (int x = 0; x < N; x++) {
		for (int y = 0; y < M; y++) {
			for (int s = 0; s < 19; s++) {
				int sum = 0;
				for (int d = 0; d < 4; d++) {
					int nx = x + dx[s][d];
					int ny = y + dy[s][d];
					if (nx < 0 || nx >= N || ny < 0 || ny >= M) goto out;
					sum += board[nx][ny];
				}
				ans = max(ans, sum);
			out:;
			}
		}
	}
	cout << ans;
}